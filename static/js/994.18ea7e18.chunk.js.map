{"version":3,"file":"static/js/994.18ea7e18.chunk.js","mappings":"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","sources":["services/getMovies-api.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/index.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/index.jsx","components/MovieAdditionalInfo/MovieAdditionalInfo.styled.jsx","components/MovieAdditionalInfo/index.jsx","views/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b19e6b2986fc1ae4c290daa4cefec337';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_URL = `${BASE_URL}trending/movie/day`;\n\nexport const getTrendingToday = async () => {\n  const response = await axios(`${TREND_URL}?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getGetMovieCastById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getGetMovieReviewsById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (searchQuery, page) => {\n  const response = await axios(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const MovieInfoBox = styled.div`\n  display: flex;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 5px;\n`;\n\nexport const MovieInfoList = styled.div`\n  margin-left: 15px;\n`;\n\nexport const MovieGenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieGenresItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieInfoBox,\n  MovieInfoList,\n  MovieGenresList,\n  MovieGenresItem,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  const url = `https://image.tmdb.org/t/p/w300/${poster_path}`;\n\n  return (\n    <MovieInfoBox>\n      <img src={url} alt={title} />\n      <MovieInfoList>\n        <h2>\n          {movie.title} ({release_date.slice(0, 4)})\n        </h2>\n        <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <MovieGenresList>\n          {genres.map(genre => (\n            <MovieGenresItem key={genre.id}>{genre.name}</MovieGenresItem>\n          ))}\n        </MovieGenresList>\n      </MovieInfoList>\n    </MovieInfoBox>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieInfo;\n","import styled from '@emotion/styled';\n\nexport const GoBackButton = styled.button`\n  margin-top: 15px;\n`;\n","import { useNavigate, useLocation } from 'react-router-dom';\nimport { GoBackButton } from './GoBackBtn.styled';\n\nconst GoBackBtn = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <GoBackButton type=\"button\" onClick={() => navigate(`${location?.state?.from}`)}>\n      Go back\n    </GoBackButton>\n  );\n};\n\nexport default GoBackBtn;\n","import styled from '@emotion/styled';\n\nexport const MovieAdditionalInfoBox = styled.div`\n  padding-bottom: 10px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 5px;\n`;\n\nexport const MovieAdditionalInfoList = styled.ul`\n  /* list-style: none; */\n  font-weight: 500;\n`;\n\nexport const MovieAdditionalInfoItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  & a {\n    text-decoration: none;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  MovieAdditionalInfoBox,\n  MovieAdditionalInfoList,\n  MovieAdditionalInfoItem,\n} from './MovieAdditionalInfo.styled';\n\nconst MovieAdditionalInfo = ({onGoBack}) => {\n  return (\n    <MovieAdditionalInfoBox>\n      <h3>Additional information</h3>\n      <MovieAdditionalInfoList>\n        <MovieAdditionalInfoItem>\n          <Link to=\"cast\" state={{ from: onGoBack }}>Cast</Link>\n        </MovieAdditionalInfoItem>\n        <MovieAdditionalInfoItem>\n          <Link to=\"reviews\" state={{ from: onGoBack }}>Reviews</Link>\n        </MovieAdditionalInfoItem>\n      </MovieAdditionalInfoList>\n    </MovieAdditionalInfoBox>\n  );\n};\n\nMovieAdditionalInfo.propTypes = {\n  onGoBack: PropTypes.string.isRequired,\n};\n\nexport default MovieAdditionalInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport * as getMoviesApi from '../services/getMovies-api';\nimport MovieInfo from '../components/MovieInfo';\nimport GoBackBtn from '../components/GoBackBtn';\nimport MovieAdditionalInfo from '../components/MovieAdditionalInfo'\n\nconst MovieDetails = () => {\n  const { movieId } = useParams('');\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMoviesApi.getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackBtn />\n      {movie && <MovieInfo movie={movie} />}\n      < MovieAdditionalInfo onGoBack={location.state.from} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","TREND_URL","getTrendingToday","axios","response","data","results","getMovieById","movie_id","getGetMovieCastById","cast","getGetMovieReviewsById","getMovieSearch","searchQuery","page","MovieInfoBox","styled","MovieInfoList","MovieGenresList","MovieGenresItem","movie","poster_path","title","release_date","vote_average","overview","genres","url","src","alt","slice","toFixed","map","genre","name","id","GoBackButton","navigate","useNavigate","location","useLocation","type","onClick","state","from","MovieAdditionalInfoBox","MovieAdditionalInfoList","MovieAdditionalInfoItem","onGoBack","to","movieId","useParams","useState","setMovie","useEffect","getMoviesApi","then"],"sourceRoot":""}