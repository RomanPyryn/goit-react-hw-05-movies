{"version":3,"file":"static/js/339.41d32f02.chunk.js","mappings":"2TAEMA,EAAU,mCACVC,EAAW,gCACXC,EAAS,UAAMD,EAAN,sBAEFE,EAAgB,mCAAG,oGACPC,GAAAA,CAAM,GAAD,OAAIF,EAAJ,oBAAyBF,IADvB,cACxBK,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKhBC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,GAAAA,CAAM,GAAD,OACvBH,EADuB,iBACNQ,EADM,oBACcT,IAFhB,cACpBK,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAmB,mCAAG,WAAMD,GAAN,uFACVL,GAAAA,CAAM,GAAD,OACvBH,EADuB,iBACNQ,EADM,4BACsBT,IAFjB,cAC3BK,EAD2B,yBAI1BA,EAASC,KAAKK,MAJY,2CAAH,sDAOnBC,EAAsB,mCAAG,WAAMH,GAAN,uFACbL,GAAAA,CAAM,GAAD,OACvBH,EADuB,iBACNQ,EADM,4BACsBT,IAFd,cAC9BK,EAD8B,yBAI7BA,EAASC,KAAKC,SAJe,2CAAH,sDAOtBM,EAAc,mCAAG,WAAOC,EAAaC,GAApB,uFACLX,GAAAA,CAAM,GAAD,OACvBH,EADuB,gCACSD,EADT,kBAC0Bc,IAF1B,cACtBT,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,yD,gFCO3B,UAnCa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KACQC,GAAYC,EAAAA,EAAAA,IAAU,IAAtBD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiCH,GAASI,KAAKL,KAC9C,CAACC,IAIJ,OACE,8BACGP,IACC,wBACGA,EAAKY,KAAI,SAAAC,GAAC,OACT,0BACGA,EAAEC,cACD,gBACEC,IAAG,UAVP,mCAUO,OAAWF,EAAEC,cAChBE,IAAKH,EAAEI,KACPC,MAAM,UAGR,sCAEF,uBAAIL,EAAEI,QACN,uCAAeJ,EAAEM,WAAa,eAXvBN,EAAEO","sources":["services/getMovies-api.js","views/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b19e6b2986fc1ae4c290daa4cefec337';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_URL = `${BASE_URL}trending/movie/day`;\n\nexport const getTrendingToday = async () => {\n  const response = await axios(`${TREND_URL}?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getGetMovieCastById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getGetMovieReviewsById = async movie_id => {\n  const response = await axios(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieSearch = async (searchQuery, page) => {\n  const response = await axios(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as getMoviesApi from '../services/getMovies-api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams('');\n\n  useEffect(() => {\n    getMoviesApi.getGetMovieCastById(movieId).then(setCast);\n  }, [movieId]);\n\n  const url = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map(i => (\n            <li key={i.cast_id}>\n              {i.profile_path ? (\n                <img\n                  src={`${url}${i.profile_path}`}\n                  alt={i.name}\n                  width=\"80px\"\n                />\n              ) : (\n                <h4>No image</h4>\n              )}\n              <p>{i.name}</p>\n              <p>Character: {i.character || 'Unknown'}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","TREND_URL","getTrendingToday","axios","response","data","results","getMovieById","movie_id","getGetMovieCastById","cast","getGetMovieReviewsById","getMovieSearch","searchQuery","page","useState","setCast","movieId","useParams","useEffect","getMoviesApi","then","map","i","profile_path","src","alt","name","width","character","cast_id"],"sourceRoot":""}